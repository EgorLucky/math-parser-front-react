{"version":3,"sources":["Components/AppDescription/index.jsx","Components/Parameter/index.jsx","Components/Parameter/constants.js","Components/ComputedFunctionItem/index.jsx","Components/Loader/index.jsx","configuration.js","mathparserService.js","App/handler.js","App/constants.js","App/index.jsx","Chart/handler.js","Chart/index.jsx","Chart/constants.js","reportWebVitals.js","index.js"],"names":["AppDescription","ParameterDiv","props","id","name","value","onTextChanged","deleteParameter","className","defaultValue","onChange","e","onClick","ComputedFunctionItem","border","cellSpacing","colSpan","functionNotation","parametersAndValues","map","pv","parameters","Loader","appConfiguration","mathParserServiceUrlProd","mathParserServiceUrlLocal","mathParserService","setConfiguration","configuration","environment","this","serviceHost","getLast","limit","a","fetch","response","getResponseContent","computeExpression","expression","payloadObject","myFetch","computeFunctionValues","parametersTable","url","body","method","headers","JSON","stringify","content","status","get","includes","json","text","result","contentType","IndexHandler","indexComponent","state","parametersArray","length","parameterProps","key","property","parameterTextChanged","push","setState","alert","filter","p","currentTarget","lastComputedFunctions","c","paramAndValueId","expressionText","variableName","isComputing","TypeError","message","computeResult","undefined","console","log","componentDidMount","App","onExpressionChange","computeButtonClicked","handler","addParameter","disabled","i","Parameter","href","process","f","Component","destroyPreviousChart","ChartHandler","chartComponent","labels","getLabels","getPointsResponse","errorMesssage","getPoints","errorMessage","points","x","y","data","datasets","label","function","borderColor","fill","Chart","pluginService","register","beforeInit","chart","config","j","func","ctx","document","getElementById","myBarChart","type","options","scales","yAxes","ticks","beginAtZero","xAxes","destroy","xMin","xMax","xStep","isNaN","ChartPage","onXMinChange","onNumberFieldChanged","onXMaxChange","onXStepChange","draw","canvasStyle","width","height","newState","Number","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","exact","component"],"mappings":"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","file":"static/js/main.9e3a440c.chunk.js","sourcesContent":["export function AppDescription(){\r\n return (\r\n\t\t\t<>\r\n\t\t\t\t<h3>Добро пожаловать в MathParser!</h3>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tЭтот сервис предназначен для парсинга и вычисления математических формул.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tПоддерживаемые операторы: +, -, /,*.\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\tПоддерживаемые функции:\r\n\t\t\t\t</p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>^ - возведение в степень;</li>\r\n\t\t\t\t\t<li>e - число e;</li>\r\n\t\t\t\t\t<li>pi - число \"пи\";</li>\r\n\t\t\t\t\t<li>exp(n) - e^n</li>\r\n\t\t\t\t\t<li>cos(x)</li>\r\n\t\t\t\t\t<li>sin(x)</li>\r\n\t\t\t\t\t<li>tg(x)</li>\r\n\t\t\t\t\t<li>ctg(x)</li>\r\n\t\t\t\t\t<li>log(a, b), где a - основание логарифма</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tПримеры выражений:\r\n\t\t\t\t</p>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>(1+2*cos(pi/2))^2</li>\r\n\t\t\t\t\t<li>(x-y)*(cos(0)) (перед нажатием кнопки \"Посчитать\" добавьте параметры x и у)</li>\r\n\t\t\t\t\t<li>2 + 0.5 + 2.5*cos(pi) - log(2, 8) + sin(x) + tg(x)^2 (перед нажатием кнопки \"Посчитать\" добавьте параметр x)</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</>\r\n\t\t);\r\n}\r\n\r\nexport default AppDescription;","import {parameterNameFieldName, parameterValueFieldName} from \"./constants\";\r\n\r\nfunction ParameterDiv(props) {\r\n\r\n\tconst { id, name, value, onTextChanged, deleteParameter } = props;\r\n\r\n\tconst nameTextChanged = e => onTextChanged(e, id, parameterNameFieldName);\r\n\tconst valueTextChanged = e => onTextChanged(e, id, parameterValueFieldName);\r\n\tconst onDeleteParameter = () => deleteParameter(id);\r\n\r\n\treturn (\r\n\t\t<div key={id} className='parameter-parent-div'>\r\n\t\t\t<div>\r\n\t\t\t\t<span>Имя параметра:</span>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<span>Значение:</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<input \r\n\t\t\t\t\tdefaultValue={name} \r\n\t\t\t\t\tonChange={nameTextChanged}\r\n\t\t\t\t/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<input \r\n\t\t\t\t\tdefaultValue={value} \r\n\t\t\t\t\tonChange={valueTextChanged}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button \r\n\t\t\t\tonClick={onDeleteParameter} \r\n\t\t\t\tclassName='parameter-delete-button'\r\n\t\t\t>\r\n\t\t\t\tУдалить параметр\r\n\t\t\t</button>\r\n\t\t</div>);\r\n\t}\r\n\r\nexport default ParameterDiv;","export const parameterNameFieldName = \"name\";\r\nexport const parameterValueFieldName = \"value\";\r\n","function ComputedFunctionItem(props) {\r\n\t return (\r\n\t\t<table \r\n\t\t\tclassName=\"computed-function-table\"\r\n\t\t\tborder=\"1\"\r\n\t\t\tcellSpacing=\"0\"\r\n\t\t>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colSpan=\"2\">\r\n\t\t\t\t\t{props.functionNotation}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\tПараметры:\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\tЗначение:\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.parametersAndValues.map(pv => \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr key={pv.id}>\r\n\t\t\t\t\t\t\t\t<td> {pv.parameters} </td>\r\n\t\t\t\t\t\t\t\t<td> {pv.value} </td>\r\n\t\t\t\t\t\t\t</tr>)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\t\r\nexport default ComputedFunctionItem;","export function Loader(){\r\n    return <div className=\"loader\"></div>\r\n}\r\n\r\nexport default Loader;","export const appConfiguration = {\r\n\tmathParserServiceUrlProd:\"https://mathparser.herokuapp.com\",\r\n\tmathParserServiceUrlLocal:\"http://localhost:5000\"\r\n};","export const mathParserService = {\r\n\tsetConfiguration(configuration, environment){\r\n\t\tthis.serviceHost = (environment === \"production\")? \r\n\t\t\t\t\t\t\tconfiguration.mathParserServiceUrlProd: \r\n\t\t\t\t\t\t\tconfiguration.mathParserServiceUrlLocal;\r\n\t},\r\n\r\n\tgetLast: async function(limit){\r\n\t\tconst response = await fetch(this.serviceHost + '/api/math/getLast?limit=' + limit);\r\n\r\n\t\treturn await getResponseContent(response);\r\n\t},\r\n\tcomputeExpression: async function(expression, parameters) {\r\n\t\tconst payloadObject = {\r\n\t\t\texpression: expression,\r\n\t\t\tparameters: parameters\r\n\t\t};\r\n\t\t\r\n\t\tconst response = await this.myFetch('/api/math/computeExpression', payloadObject);\r\n\r\n\t\treturn response;\r\n\t},\r\n\t\r\n\tcomputeFunctionValues: async function(expression, parametersTable) {\r\n\t\tconst payloadObject = {\r\n\t\t\texpression: expression,\r\n\t\t\tparametersTable: parametersTable\r\n\t\t};\r\n\t\t\r\n\t\tconst response = await this.myFetch('/api/math/computeFunctionValues', payloadObject);\r\n\r\n\t\treturn response;\r\n\t},\r\n\r\n\tmyFetch: async function(url, body){\r\n\t\tconst response = await fetch(this.serviceHost + url,\r\n\t\t{\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"content-type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(body)\r\n\t\t});\r\n\r\n\t\treturn await getResponseContent(response);\r\n\t}\r\n};\r\n\r\nasync function getResponseContent(response)\r\n{\r\n\tlet content = null;\r\n\t\t\t\r\n\tif(response.status === 200 || \r\n\t\tresponse.headers.get(\"content-type\").includes(\"application/json\"))\r\n\t\tcontent = await response.json();\r\n\telse \r\n\t\tcontent = await response.text();\r\n\r\n\tconst result = {\r\n\t\tstatus : response.status,\r\n\t\tcontent: content,\r\n\t\tcontentType: response.headers.get(\"content-type\")\r\n\t};\r\n\r\n\treturn result;\r\n}","import {appConfiguration} from \"../configuration.js\";\r\nimport {mathParserService} from \"../mathparserService.js\";\r\n\r\nimport {MAX_PARAMETERS_COUNT} from \"./constants\";\r\n\r\nconst environment = /*(document.location.host.startsWith('127') || document.location.host.startsWith(\"localhost\")) ? \"development\": */\"production\";\r\nmathParserService.setConfiguration(appConfiguration, environment);\r\n\r\nexport class IndexHandler{\r\n    constructor(indexComponent){\r\n        this.indexComponent = indexComponent;\r\n    }\r\n\r\n    addParameter() {\r\n\t\tconst parameters = this.indexComponent.state.parametersArray;\r\n\t\t\r\n\t\tif(parameters.length === MAX_PARAMETERS_COUNT) {\r\n\t\t\talert(\"Не более 5 параметров!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst key = parameters.length === 0\r\n\t\t\t\t? 1\r\n\t\t\t\t: parameters[parameters.length - 1].key + 1;\r\n\t\t\t\r\n\t\tconst parameterProps = {\r\n\t\t\tdeleteParameter: (key) => this.deleteParameter(key), \r\n\t\t\tkey: key,\r\n\t\t\tname: \"\",\r\n\t\t\tvalue: \"\",\r\n\t\t\tonTextChanged: (e, key, property) => this.parameterTextChanged(e, key, property)\r\n\t\t};\r\n\t\t\r\n\t\tparameters.push(parameterProps);\r\n\t\t\r\n\t\tthis.indexComponent.setState({parametersArray: parameters});\r\n\t\t\r\n\t}\r\n\r\n\tparameterTextChanged(e, key, property) {\r\n\t\tconst stateParameter = this.indexComponent\r\n\t\t\t\t\t\t\t\t\t.state\r\n\t\t\t\t\t\t\t\t\t.parametersArray\r\n\t\t\t\t\t\t\t\t\t.filter(p => p.key === key)[0];\r\n\t\tstateParameter[property] = e.currentTarget.value;\r\n\r\n\t\tthis.indexComponent.setState({parametersArray: this.indexComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.state\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.parametersArray});\r\n\t}\r\n\t\r\n\tdeleteParameter(key) {\r\n\t\tconst parameters = this\r\n\t\t\t\t\t\t.indexComponent\r\n\t\t\t\t\t\t.state\r\n\t\t\t\t\t\t.parametersArray\r\n\t\t\t\t\t\t.filter(p => p.key !== key);\r\n\t\tthis.indexComponent.setState({parametersArray: parameters});\r\n\t}\r\n\t\r\n\tasync componentDidMount() {\r\n\t\tconst response = await mathParserService.getLast(20);\r\n\r\n\t\tlet id = 0;\r\n\t\tconst lastComputedFunctions = response.content.map(c => {\r\n\t\t\tc[\"id\"] = id++;\r\n\t\t\t\r\n\t\t\tlet paramAndValueId = 0;\r\n\t\t\tc.parametersAndValues.map(pv => pv[\"id\"] = paramAndValueId++);\r\n\t\t\treturn c;\r\n\t\t});\r\n\r\n\t\tthis.indexComponent.setState({ \r\n\t\t\tlastComputedFunctions: lastComputedFunctions\r\n\t\t});\r\n\t}\r\n\t  \r\n\tasync computeButtonClicked() {\r\n\t\t\r\n\t\tconst expressionText = this.indexComponent.state.expression;\r\n\t\t\r\n\t\tconst parameters = this.indexComponent.state.parametersArray.map(p => ({\r\n\t\t\tvariableName: p.name,\r\n\t\t\tvalue: p.value\r\n\t\t}));\r\n\t\t\r\n\t\tthis.indexComponent.setState({isComputing: true});\r\n\t\t\r\n\t\tlet response = null;\r\n\t\ttry{\r\n\t\t\tresponse = await mathParserService.computeExpression(expressionText, parameters);\r\n\t\t}\r\n\t\tcatch(err)\r\n\t\t{\r\n\t\t\tthis.indexComponent.setState({isComputing: false});\r\n\t\t\tlet result = \"Ошибка!\";\r\n\t\t\tif(err instanceof TypeError && \r\n\t\t\t\terr.message === \"Failed to fetch\") {\r\n\t\t\t\tresult+= \" Проверьте ваше подключение к сети.\";\r\n\t\t\t}\r\n\t\t\t\r\n            this.indexComponent.setState({computeResult: result});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(response.status === 200)\r\n\t\t{\t\t\t\r\n\t\t\tthis.indexComponent.setState({\r\n\t\t\t\tisComputing: false,\r\n\t\t\t\tcomputeResult: response?.content?.result\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(response.contentType.includes(\"json\") \r\n\t\t\t\t&& response?.content?.message !== undefined) \r\n\t\t\t{\r\n            \tthis.indexComponent.setState({\r\n\t\t\t\t\tcomputeResult: \"Ошибка! Ответ от сервера: \" + response.content.message,\r\n\t\t\t\t\tisComputing: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tthis.indexComponent.setState({\r\n\t\t\t\t\tcomputeResult: \"Ошибка!\",\r\n\t\t\t\t\tisComputing: false\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(response.content);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.componentDidMount();\r\n\t}\r\n}","export const MAX_PARAMETERS_COUNT = 5;","import React, { Component } from 'react';\r\n\r\nimport AppDescription from '../Components/AppDescription';\r\nimport ParameterDiv from '../Components/Parameter';\r\nimport ComputedFunctionItem from '../Components/ComputedFunctionItem';\r\nimport Loader from '../Components/Loader';\r\n\r\nimport {IndexHandler} from \"./handler\";\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor (props){\r\n\t\t super(props); \r\n\t\t this.state = {\r\n\t\t\t\tparametersArray:[],\r\n\t\t\t\tlastComputedFunctions:[],\r\n\t\t\t\tisComputing: false,\r\n\t\t\t\tcomputeResult: \"\",\r\n\t\t\t\texpression: \"\"\r\n\t\t\t};\r\n\r\n\t\tthis.handler = new IndexHandler(this);\r\n\t}\r\n\r\n\tonExpressionChange = e => this.setState({expression: e.currentTarget.value});\r\n\r\n\tcomputeButtonClicked = () => this.handler.computeButtonClicked();\r\n\r\n\taddParameter = () => this.handler.addParameter();\r\n\r\n\tcomponentDidMount = () => this.handler.componentDidMount();\r\n\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t\t<AppDescription/>\r\n\t\t\t\tВведите выражение:\r\n\t\t\t\t<br/>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName='index-expression-textarea'\r\n\t\t\t\t\tonChange={this.onExpressionChange}\r\n\t\t\t\t\tdefaultValue={this.state.expression}>\r\n\t\t\t\t</textarea>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={this.state.isComputing}\r\n\t\t\t\t\tonClick={this.computeButtonClicked}\r\n\t\t\t\t>\r\n\t\t\t\t\tПосчитать\r\n\t\t\t\t</button>\r\n\t\t\t\t<button id=\"addParameterButton\" \r\n\t\t\t\t\t\tonClick={this.addParameter}>\r\n\t\t\t\t\tДобавить параметр\r\n\t\t\t\t</button>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div id=\"parameters\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.parametersArray.map(i => {\r\n\t\t\t\t\t\t\treturn <ParameterDiv\r\n\t\t\t\t\t\t\t\tkey={i.key}\r\n\t\t\t\t\t\t\t\tid={i.key}\r\n\t\t\t\t\t\t\t\tname={i.name}\r\n\t\t\t\t\t\t\t\tvalue={i.value}\r\n\t\t\t\t\t\t\t\tdeleteParameter={i.deleteParameter}\r\n\t\t\t\t\t\t\t\tonTextChanged={i.onTextChanged}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.isComputing && <Loader/> || <p>{this.state.computeResult}</p>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<a href={process.env.PUBLIC_URL + \"/chart\"}>Здесь можно построить график</a>\r\n\r\n\t\t\t\t<h3>Последние вычисленные функции:</h3>\r\n\t\t\t\t<div id=\"lastComputedFunctions\">\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.lastComputedFunctions.length === 0 && (<Loader/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.lastComputedFunctions.map(f => \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn <ComputedFunctionItem \r\n\t\t\t\t\t\t\t\t\tkey={f.id}\r\n\t\t\t\t\t\t\t\t\tfunctionNotation={f.functionNotation}\r\n\t\t\t\t\t\t\t\t\tparametersAndValues={f.parametersAndValues}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\t  \r\n}\r\n\r\nexport default App;\r\n","import Chart from 'chart.js';\r\n\r\nimport {appConfiguration} from \"../configuration.js\";\r\nimport {mathParserService} from \"../mathparserService.js\";\r\n\r\nconst environment = /*(document.location.host.startsWith('127') || document.location.host.startsWith(\"localhost\")) ? \"development\": */\"production\";\r\nmathParserService.setConfiguration(appConfiguration, environment);\r\nlet destroyPreviousChart = null;\r\n\r\nexport class ChartHandler{\r\n    constructor(chartComponent){\r\n        this.chartComponent = chartComponent;\r\n    }\r\n\r\n    async draw(){\r\n\t\tconst labels = this.getLabels();\r\n\t\t\r\n\t\tthis.chartComponent.setState({isComputing: true});\r\n\t\t\r\n\t\tlet getPointsResponse = null;\r\n\t\tlet errorMesssage = \"\";\r\n\t\ttry{\r\n\t\t\tgetPointsResponse = await this.getPoints(labels);\r\n\t\t}\r\n\t\tcatch(err)\r\n\t\t{\r\n\t\t\terrorMesssage = \"Ошибка!\";\r\n\t\t\tif(err instanceof TypeError && \r\n\t\t\t\terr.message === \"Failed to fetch\") {\r\n\t\t\t\t\terrorMesssage+= \" Проверьте ваше подключение к сети.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.chartComponent.setState({\r\n\t\t\t\terrorMessage: errorMesssage, \r\n\t\t\t\tisComputing: false\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(getPointsResponse.status !== 200)\r\n\t\t{\r\n\t\t\tif(getPointsResponse.contentType.includes(\"json\") \r\n\t\t\t\t&& getPointsResponse?.content?.message !== undefined)\r\n\t\t\t\terrorMesssage = \"Ошибка! Ответ от сервера: \" + getPointsResponse.content.message;\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\terrorMesssage = \"Ошибка!\";\r\n\t\t\t\tconsole.log(getPointsResponse.content);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.chartComponent.setState({\r\n\t\t\t\terrorMessage: errorMesssage, \r\n\t\t\t\tisComputing: false\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.chartComponent.setState({errorMessage: \"\"});\r\n\r\n\t\tconst points = getPointsResponse.content.result.map(c => ({\r\n\t\t\tx: c.parameters[0].value,\r\n\t\t\ty: c.value\r\n\t\t}));\r\n\r\n\t\tif(destroyPreviousChart != null)\r\n\t\t\tdestroyPreviousChart();\r\n\r\n\t\tconst data = {\r\n\t\t\t//args\r\n\t\t\tlabels: labels,\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\t\tlabel: \"mathFunction\",\r\n\t\t\t\t\tfunction: x => points.filter(p => p.x === x)\r\n\t\t\t\t\t\t\t\t\t\t.map(p => p.y),\r\n\t\t\t\tborderColor: \"rgba(255, 206, 86, 1)\",\r\n\t\t\t\tdata: [],\r\n\t\t\t\tfill: false\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\tChart.pluginService.register({\r\n\t\t\tbeforeInit: function (chart) {\r\n\t\t\t\tconst data = chart.config.data;\r\n\t\t\t\tfor (let i = 0; i < data.datasets.length; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < data.labels.length; j++) {\r\n\t\t\t\t\t\tconst func = data.datasets[i].function,\r\n\t\t\t\t\t\t\tx = data.labels[j],\r\n\t\t\t\t\t\t\tfunctionValues = func(x);\r\n\t\t\t\t\t\tfunctionValues.map(y => data.datasets[i].data.push(y));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tconst ctx = document.getElementById(\"myChart\");\r\n\t\tconst myBarChart = new Chart(ctx, {\r\n\t\t\ttype: 'line',\r\n\t\t\tdata: data,\r\n\t\t\toptions: {\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tyAxes: [{\r\n\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\tbeginAtZero: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}],\r\n\t\t\t\t\txAxes: [{\r\n\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\tbeginAtZero: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tdestroyPreviousChart = () => myBarChart.destroy();\r\n\t\t\r\n\t\tthis.chartComponent.setState(\r\n\t\t{\r\n\t\t\tisComputing: false, \r\n\t\t\terrorMessage: errorMesssage\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetLabels() {\r\n\t\tconst {xMin, xMax, xStep} = this.chartComponent.state;\r\n\r\n\t\tif (isNaN(xMin) ||\r\n\t\t\tisNaN(xMax) ||\r\n\t\t\tisNaN(xStep))\r\n\t\t\treturn [0, 1, 2, 3, 4, 5];\r\n\r\n\t\tconst result = [];\r\n\t\tfor (let i = xMin; i < xMax; i += xStep)\r\n\t\t\tresult.push(i);\r\n\t\tresult.push(xMax);\r\n\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tasync getPoints(labels) {\r\n\t\tconst expression = this.chartComponent.state.expression;\r\n\t\tconst parametersTable = labels.map(a => [\r\n\t\t{\r\n\t\t\tvariableName: \"x\",\r\n\t\t\tvalue: a\r\n\t\t}]);\r\n\t\tconst response = await mathParserService.computeFunctionValues(expression, parametersTable);\r\n\r\n\t\treturn response;\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport Loader from '../Components/Loader';\r\n\r\nimport {ChartHandler} from \"./handler\";\r\nimport {xMin, xMax, xStep} from \"./constants\";\r\n\r\nclass ChartPage extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tisComputing: false,\r\n\t\t\terrorMessage: \"\",\r\n\t\t\texpression: \"x^2\",\r\n\t\t\txMin: -15,\r\n\t\t\txMax: 15,\r\n\t\t\txStep: 1\r\n\t\t};\r\n\r\n\t\tthis.handler = new ChartHandler(this);\r\n\r\n\t\tthis.canvasStyle = {\r\n\t\t\twidth:\"400px\", \r\n\t\t\theight:\"400px\"\r\n\t\t};\r\n\t}\r\n\r\n\tonNumberFieldChanged(property, e) {\r\n\t\tconst newState = {};\r\n\t\tnewState[property] = Number(e.currentTarget.value);\r\n\t\tthis.setState(newState);\r\n\t}\r\n\r\n\tonExpressionChange = e => this.setState({expression: e.currentTarget.value});\r\n\r\n\tonXMinChange = e => this.onNumberFieldChanged(xMin, e);\r\n\r\n\tonXMaxChange = e => this.onNumberFieldChanged(xMax, e);\r\n\r\n\tonXStepChange = e => this.onNumberFieldChanged(xStep, e);\r\n\r\n\tdraw = () => this.handler.draw();\r\n\t\r\n\trender(){\r\n\t\treturn <>\r\n\t\t\t\t\t<h3>Построение графика</h3>\r\n\t\t\t\t\t<a href={process.env.PUBLIC_URL + \"/\"}>На главную</a>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\tВведите выражение f(x):\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tonChange={this.onExpressionChange}\r\n\t\t\t\t\t\tclassName='chart-expression-textarea'\r\n\t\t\t\t\t\tdefaultValue={this.state.expression}>\r\n\t\t\t\t\t</textarea>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<div className=\"chart-2d-parameter-div\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tОбласть определений\r\n\t\t\t\t\t\t\t<br/> \r\n\t\t\t\t\t\t\tот: \r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tonChange={this.onXMinChange}\r\n\t\t\t\t\t\t\t\tdefaultValue={this.state.xMin}/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\tдо: \r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tonChange={this.onXMaxChange}\r\n\t\t\t\t\t\t\t\tdefaultValue={this.state.xMax}/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tс шагом:\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tonChange={this.onXStepChange}\r\n\t\t\t\t\t\t\t\tdefaultValue={this.state.xStep}/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\tdisabled={this.state.isComputing}\r\n\t\t\t\t\t\t\t\tonClick={this.draw}>\r\n\t\t\t\t\t\t\tПостроить\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.isComputing && <Loader/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.errorMessage\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<canvas \r\n\t\t\t\t\t\tid=\"myChart\" \r\n\t\t\t\t\t\tstyle={this.canvasStyle}>\r\n\t\t\t\t\t</canvas>\r\n\t\t\t\t</>;\r\n\t}\r\n}\r\n\r\nexport default ChartPage;","export const xMin = \"xMin\";\r\nexport const xMax = \"xMax\";\r\nexport const xStep = \"xStep\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport ChartPage from './Chart';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Switch>\r\n        <Route path=\"/\" exact component={App} />\r\n        <Route path={ process.env.PUBLIC_URL + \"/\" } exact component={App} />\r\n        <Route path={ process.env.PUBLIC_URL + \"/chart\" } component={ChartPage} />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n\r\n//<React.StrictMode>\r\n//    <App />\r\n//  </React.StrictMode>\r\n\r\n//<Route component={NotFound} />"],"sourceRoot":""}